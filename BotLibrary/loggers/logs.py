# BotLibrary/loggers/logs.py
# –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ª–æ–≥–≥–µ—Ä—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞, —Å –±–æ–ª–µ–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º

from loguru import logger
from aiogram.types import Message

from BotLibrary.system.bots import BotInfo
from BotLibrary.validators.username import username
from BotLibrary.analytics.type_msg import type_msg

from ProjectsFiles import BotLogs, Permissions, ProjectPath, BotVar, bot_owner

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏–∑ –º–æ–¥—É–ª—è
__all__ = ("Logs",)


class Logs:
    """–ö–ª–∞—Å—Å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —á–µ—Ä–µ–∑ loguru."""
    @staticmethod
    def setup(logging: bool = BotLogs.permission,
              to_file: bool = BotLogs.permission_to_file) -> None:
        """
        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞, –≤—ã–≤–æ–¥—è—â–∏—Ö –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ —Ñ–∞–π–ª—ã.
        –õ–æ–≥–≥–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –∫–æ–Ω—Ñ–∏–≥–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞.

        –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ª–æ–≥–∏ –¥–ª—è —É—Ä–æ–≤–Ω–µ–π DEBUG, INFO, WARNING, ERROR.
        –ò –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–∞–∫–∏–µ, –∫–∞–∫ START, NEW_USER, LEAVE_USER

        :param logging: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å (config)
        :param to_file: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª (config)
        :return: –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–µ—Ä–æ–≤ –ø–æ–¥ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏
        """
        logger.remove()  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ª–æ–≥–≥–µ—Ä—ã

        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, —Ç–æ –æ–Ω —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏
        if logging and BotLogs.permission_to_file:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å START
            logger.level("START", no=25, color="white", icon="üî∏")
        if logging and BotLogs.permission_new_user:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å NEW_USER
            logger.level("NEW_USER", no=4, color="white", icon="üëã")
        if logging and BotLogs.permission_leave_user:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å LEAVE_USER
            logger.level("LEAVE_USER", no=3, color="white", icon="ü´∞")

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
        if logging:
            from sys import stderr
            logger.add(stderr,
                       colorize=True,
                       format=BotLogs.start_text,
                       level="START",
                       filter=lambda record: record["level"].name == "START"
                       )
            logger.add(stderr,
                       colorize=True,
                       format=BotLogs.debug_text,
                       level="DEBUG",
                       filter=lambda record: record["level"].name == "DEBUG")
            logger.add(stderr,
                       colorize=True,
                       format=BotLogs.info_text,
                       level="INFO",
                       filter=lambda record: record["level"].name == "INFO")
            logger.add(stderr,
                       colorize=True,
                       format=BotLogs.warning_text,
                       level="WARNING",
                       filter=lambda record: record["level"].name == "WARNING")
            logger.add(stderr,
                       colorize=True,
                       format=BotLogs.error_text,
                       level="ERROR",
                       filter=lambda record: record["level"].name == "ERROR")

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
        if to_file:
            logger.add(ProjectPath.start_log_file,
                       rotation=BotLogs.max_size,
                       format=BotLogs.start_text,
                       backtrace=True,
                       diagnose=True,
                       level="START",
                       filter=lambda record: record["level"].name == "START")
            logger.add(ProjectPath.debug_log_file,
                       rotation=BotLogs.max_size,
                       format=BotLogs.debug_text,
                       backtrace=True,
                       diagnose=True,
                       level="DEBUG",
                       filter=lambda record: record["level"].name == "DEBUG")
            logger.add(ProjectPath.info_log_file,
                       rotation=BotLogs.max_size,
                       format=BotLogs.info_text,
                       backtrace=True,
                       diagnose=True,
                       level="INFO",
                       filter=lambda record: record["level"].name == "INFO")
            logger.add(ProjectPath.warning_log_file,
                       rotation=BotLogs.max_size,
                       format=BotLogs.warning_text,
                       backtrace=True,
                       diagnose=True,
                       level="WARNING",
                       filter=lambda record: record["level"].name == "WARNING")
            logger.add(ProjectPath.error_log_file,
                       rotation=BotLogs.max_size,
                       format=BotLogs.error_text,
                       backtrace=True,
                       diagnose=True,
                       level="ERROR",
                       filter=lambda record: record["level"].name == "ERROR")


    @staticmethod
    def start(text: str = "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ!",
              system: str = "PRIMO",
              log_type: str = "AEP",
              user: str = "@Console") -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ START.

        :param text: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param system: –¢–∏–ø —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param log_type: –¢–∏–ø –ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Help").
        :param user: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞ –ª–æ–≥–∞.

        :return: –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
        """
        logger.bind(system=system, user=user, log_type=log_type).log("START", text)


    @staticmethod
    def debug(text: str = "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ!",
              system: str = "DEBUG",
              log_type: str = "Logs",
              user: str = "@Console",
              message: Message = None) -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ DEBUG.

        :param text: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param system: –¢–∏–ø —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param log_type: –¢–∏–ø –ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Help").
        :param user: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞ –ª–æ–≥–∞.
        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–≤–ª–µ—á—å –∏–º—è.

        :return: –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –¥–µ–±–∞–≥-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        """
        if message:
            user = username(message)
        logger.bind(system=system, log_type=log_type, user=user).debug(text)


    @staticmethod
    def info(text: str = "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ!",
             system: str = "PRIMO",
             log_type: str = "Logs",
             user: str = "@Console",
             message: Message = None) -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ INFO.

        :param text: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param system: –¢–∏–ø —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param log_type: –¢–∏–ø –ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Logs").
        :param user: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞ –ª–æ–≥–∞.
        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–≤–ª–µ—á—å –∏–º—è.

        :return: –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –Ω–µ–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        """
        if message:
            user = username(message)
        logger.bind(system=system, log_type=log_type, user=user).info(text)


    @staticmethod
    def warning(text: str = "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ!",
                system: str = "WARNING",
                log_type: str = "Logs",
                user: str = "@Console",
                message: Message = None) -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ WARNING.

        :param text: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param system: –¢–∏–ø —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param log_type: –¢–∏–ø –ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Logs").
        :param user: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞ –ª–æ–≥–∞.
        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–≤–ª–µ—á—å –∏–º—è.

        :return: –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏
        """
        if message:
            user = username(message)
        logger.bind(system=system, log_type=log_type, user=user).warning(text)


    @staticmethod
    def error(text: str = "–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ!",
              system: str = "ERROR",
              log_type: str = "Logs",
              user: str = "@Console",
              message: Message = None) -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ ERROR.

        :param text: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param system: –¢–∏–ø —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
        :param log_type: –¢–∏–ø –ª–æ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Logs").
        :param user: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –≤—ã–∑–æ–≤–∞ –ª–æ–≥–∞.
        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑–≤–ª–µ—á—å –∏–º—è.

        :return: –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        """
        if message:
            user = username(message)
        logger.bind(system=system, log_type=log_type, user=user).error(text)


    @staticmethod
    def msg(message: Message,
            log_type: str = "Message",
            user: str = None,
            msg_type: str = None,
            permission: bool = BotLogs.permission) -> None:
        """
        –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ.

        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        :param log_type: –¢–∏–ø –ª–æ–≥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "Message").
        :param permission: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (config).
        :param user: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏).
        :param msg_type: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏).
.
        :return: –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–±—ã—á–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        """
        # –ü–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ —á–∞—Ç–∞
        chat_id = message.chat.id

        # –ü–æ–ª—É—á–∞–µ–º username –∏–ª–∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user is None:
            user: str = f"@{message.from_user.username or message.from_user.id}"
        if msg_type is None:
            msg_type: str = type_msg(message)

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
        if permission:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –µ–≥–æ —Ç–∏–ø–∞
            if message.text is None and msg_type not in ("–ù–æ–≤—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —á–∞—Ç–∞", "–£—à–µ–¥—à–∏–π —É—á–∞—Å—Ç–Ω–∏–∫ —á–∞—Ç–∞"):
                Logs.info(log_type=log_type, user=user, text=f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ ({chat_id}) : {msg_type}")
            elif message.text is not None:
                Logs.info(log_type=log_type, user=user,
                          text=f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ ({chat_id}) : {message.text}")


    @staticmethod
    def console(console: bool = Permissions.start_info_console,
                file: bool = Permissions.start_info_to_file,
                path: str = ProjectPath.bot_info_log_file) -> None:
        """
        –°–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ—ë –≤ –∫–æ–Ω—Å–æ–ª—å, –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É.

        :param console: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤–Ω–µ—Å–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å (config)
        :param file: –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≤–Ω–µ—Å–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª (config)
        :param path: –ü—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ (config)
        :return: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
        """
        # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –±–æ—Ç–µ
        bot_name: str = f"–û—Å–Ω–æ–≤–Ω–æ–µ –∏–º—è: {BotInfo.first_name}\n"
        bot_post_name: str = f"–í–ª–∞–¥–µ–ª—å—Ü—ã –±–æ—Ç–∞: {bot_owner}\n"
        bot_username: str = f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{BotInfo.username}\n"
        bot_id: str = f"ID: {BotInfo.id}\n"
        bot_can_join_groups: str = f"–ú–æ–∂–µ—Ç –ª–∏ –≤—Å—Ç—É–ø–∞—Ç—å –≤ –≥—Ä—É–ø–ø—ã: {BotInfo.can_join_groups}\n"
        bot_can_read_all_group_messages: str = f"–ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {BotInfo.can_read_all_group_messages}\n"
        bot_supports_inline_queries: str = f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å—ã: {BotInfo.supports_inline_queries}\n"
        bot_can_connect_to_business: str = f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∏–∑–Ω–µ—Å-–∞–∫–∫–∞—É–Ω—Ç–∞–º: {BotInfo.can_connect_to_business}\n"
        bot_has_main_web_app: str = f"–û—Å–Ω–æ–≤–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {BotInfo.has_main_web_app}\n"

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
        bot_all_info: str = (f"{bot_name} {bot_post_name} {bot_username} {bot_id} "
                             f"{bot_can_join_groups} {bot_can_read_all_group_messages} "
                             f"{bot_supports_inline_queries} {bot_can_connect_to_business} "
                             f"{bot_has_main_web_app}")

        # –ü–µ—á–∞—Ç–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        if console:
            from colorama import Fore
            print(Fore.CYAN + bot_all_info)

        # –ü–µ—á–∞—Ç–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–∞–π–ª
        if file:
            #  –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å bot_all_info –≤ —Å—Ç—Ä–æ–∫—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
            with open(path, 'w', encoding=BotVar.encod) as file:
                file.write(str(bot_all_info))
