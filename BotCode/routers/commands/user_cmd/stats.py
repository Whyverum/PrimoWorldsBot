# BotCode/routers/commands/user_cmd/stats_cmd.py
# –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /stats, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ
import sqlite3
from aiogram import types

from BotLibrary import CommandHandler, username_to_text, bot
from ProjectsFiles import BotVar

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ –º–æ–¥—É–ª–∏
__all__ = ("stats_cmd",)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
async def send_stats(message: types.Message):
    with sqlite3.connect(BotVar.bd_names) as db:
        cursor = db.cursor()
        cursor.execute("SELECT messages_per_day, messages_per_week, messages_per_month, "
                       "total_messages FROM user_messages WHERE user_id = ?", (message.from_user.id,))
        stats = cursor.fetchone()
        if stats:
            await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å | {username_to_text(message)}\n"
                                 f"üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:\n"
                                 f"üìÖ –ó–∞ –¥–µ–Ω—å: {stats[0]}\n"
                                 f"üìÜ –ó–∞ –Ω–µ–¥–µ–ª—é: {stats[1]}\n"
                                 f"üìÖ –ó–∞ –º–µ—Å—è—Ü: {stats[2]}\n"
                                 f"üî¢ –í—Å–µ–≥–æ: {stats[3]}")
        else:
            await message.answer("‚ùå –í—ã –ø–æ–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.")

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /start —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –º–µ–¥–∏–∞
stats_cmd = CommandHandler(
    name="stats",
    description="–í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
    keywords=["stats", "—ã–µ—Ñ–µ—ã", "cnfnf", "—Å—Ç–∞—Ç–∞", "–ö—Ç–æ —è", "Rnj z", "vjbcjj,otybz", "–º–æ–∏—Å–æ–æ–±—â–µ–Ω–∏—è"],
    callbackdata=["keywords"],
    media="command", func=[send_stats],
)
